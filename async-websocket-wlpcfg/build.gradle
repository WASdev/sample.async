apply plugin: 'liberty'

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

group = 'net.wasdev.wlp.sample'
version = '1.0-SNAPSHOT'

description = 'WAS Liberty Sample - WebSocket Sample Server Configuration'

ext {
    // Liberty server properties
    wlpServerName = 'websocketSample'
    testServerHttpPort = 9082
    testServerHttpsPort = 9445
    appLocation = "async-websocket-application.war"
    warFile = project(':async-websocket-application').getTasks().getByName('war').archivePath
    warContext = 'websocket'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.6.3'
    }
}

dependencies {
    compile project(':async-websocket-application')
    testCompile group: 'javax', name: 'javaee-api', version:'7.0'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.eclipse.jetty.websocket', name: 'javax-websocket-client-impl', version:'9.2.13.v20150730'
    libertyRuntime group: 'com.ibm.websphere.appserver.runtime', name: 'wlp-javaee7', version: '17.0.0.2'
}

liberty {
    server {
        name = wlpServerName
        configFile = file("servers/${wlpServerName}/server.xml")
        bootstrapProperties = ['default.http.port': testServerHttpPort, 
                               'default.https.port': testServerHttpsPort, 
                               'appLocation': appLocation, 
                               'appContext': warContext]
        apps = [warFile]
    }
}

test {
    reports.html.destination = file("$buildDir/reports/unit")
    reports.junitXml.destination = file("$buildDir/test-results/unit")
    exclude '**/it/**'
}

task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    reports.html.destination = file("$buildDir/reports/it")
    reports.junitXml.destination = file("$buildDir/test-results/it")
    include '**/it/**'
    exclude '**/unit/**'

    systemProperties = ['liberty.test.port': testServerHttpPort]
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(":" + project.name + ":libertyStart") && !graph.hasTask(":" + project.name + ":libertyStop")) {
        libertyStart.doLast {
            println ("Server should be running on: http://localhost:${testServerHttpPort}/${warContext}")
        }
    }
}

check.dependsOn 'integrationTest'
integrationTest.dependsOn 'libertyStart'
integrationTest.finalizedBy 'libertyStop'
installApps.dependsOn ':async-websocket-application:war'
