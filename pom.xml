<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.wasdev.maven.parent</groupId>
        <artifactId>java6-parent</artifactId>
        <version>1.3</version>
        <relativePath></relativePath>
    </parent>

    <groupId>net.wasdev.wlp.sample</groupId>
    <artifactId>async-websocket</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Liberty Profile Sample - WebSocket Sample</name>
    <url>https://wasdev.github.io</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://raw.github.com/WASdev/sample.planningpoker/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:WASdev/sample.async.websockets.git</connection>
        <developerConnection>scm:git@github.com:WASdev/sample.async.websockets.git</developerConnection>
        <url>git@github.com:WASdev/sample.async.websockets.git</url>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax.websocket</groupId>
                <artifactId>javax.websocket-api</artifactId>
                <version>1.1</version>
            </dependency>
            <dependency>
                <groupId>javax.enterprise.concurrent</groupId>
                <artifactId>javax.enterprise.concurrent-api</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>javax.json</groupId>
                <artifactId>javax.json-api</artifactId>
                <version>1.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise.concurrent</groupId>
            <artifactId>javax.enterprise.concurrent-api</artifactId>
			<scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <!-- Create a websocketSample server directory, and copy everything
                                     from the src/main/wlp directory into it. This allows you to store
                                     server.xml and supporting configuration in your source tree -->
                                <mkdir dir="${project.build.directory}/usr/servers/websocketSample"/>
                                <copy todir="${project.build.directory}/usr/servers/websocketSample">
                                    <fileset dir="src/main/wlp"/>
                                </copy>
                                <mkdir dir="${project.build.directory}/usr/servers/websocketSample/apps"/>
                                <copy file="${project.build.directory}/${project.build.finalName}.war"
                                    tofile="${project.build.directory}/usr/servers/websocketSample/apps/websocket.war"/>
                            </target>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>